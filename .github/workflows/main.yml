# Name of the workflow as it appears in GitHub Actions UI
name: Azure App Service

# Define when this workflow will run
on:
  workflow_dispatch:  # Allow manual triggering from GitHub UI
  push:
    branches:
      - master  # Run automatically when code is pushed to master branch

# Environment variables used throughout the workflow
env:
  AZURE_WEBAPP_NAME: AzureAppServiceLearning
  AZURE_WEBAPP_PACKAGE_PATH: './AzureApp/publish'
  DOTNET_VERSION: '8.x'
  SOLUTION_PATH: 'AzureApp.sln'
  API_PROJECT_PATH: 'AzureApp'
  PUBLISH_DIR: './publish'

# Define the separate jobs that make up this workflow
jobs:
  # First job: build and test the application
  build-and-test:
    name: Build and Test
    runs-on: windows-latest # Use Windows runner for this job

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build
        run: |
          dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

      - name: Test
        run: |
          dotnet test ${{ env.SOLUTION_PATH }} --configuration Release --no-restore --no-build --verbosity normal

      - name: Publish
        run: |
          dotnet publish ${{ env.API_PROJECT_PATH }} --configuration Release --no-restore --no-build -p:PublishDir=${{ env.PUBLISH_DIR }}

      # Store the published output as an artifact for later jobs
      - name: Publish Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webapp  # Name of the artifact
          path: ${{ env.PUBLISH_DIR }}  # ✅ Corrected path

  # Second job: deploy the application to Azure
  deploy:
    name: Deploy to Azure
    runs-on: windows-latest
    needs: [build-and-test] # This job depends on the build-and-test job

    steps:
      # Retrieve the artifacts from the build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: webapp
          path: ${{ env.PUBLISH_DIR }}  # ✅ Corrected path

      # Deploy to Azure App Service using publish profile credentials
      - name: Deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          # Authentication credentials stored as a secret
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: '${{ env.PUBLISH_DIR }}'  # ✅ Corrected path
